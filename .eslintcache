[{"C:\\Users\\user\\Desktop\\React\\confusion\\src\\index.js":"1","C:\\Users\\user\\Desktop\\React\\confusion\\src\\App.js":"2","C:\\Users\\user\\Desktop\\React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\comments.js":"12","C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\promotions.js":"13","C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\leaders.js":"14","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\user\\Desktop\\React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\user\\Desktop\\React\\confusion\\src\\redux\\reducer.js":"17"},{"size":639,"mtime":1609320184764,"results":"18","hashOfConfig":"19"},{"size":543,"mtime":1609414376256,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1490,"mtime":1609338379778,"results":"22","hashOfConfig":"19"},{"size":1439,"mtime":1609334798660,"results":"23","hashOfConfig":"19"},{"size":6573,"mtime":1609586205214,"results":"24","hashOfConfig":"19"},{"size":2015,"mtime":1609414766246,"results":"25","hashOfConfig":"19"},{"size":5120,"mtime":1609423711883,"results":"26","hashOfConfig":"19"},{"size":2641,"mtime":1609326396602,"results":"27","hashOfConfig":"19"},{"size":1112,"mtime":1609334930927,"results":"28","hashOfConfig":"19"},{"size":10995,"mtime":1609508854351,"results":"29","hashOfConfig":"19"},{"size":4272,"mtime":1609334839481,"results":"30","hashOfConfig":"19"},{"size":417,"mtime":1609334867056,"results":"31","hashOfConfig":"19"},{"size":2426,"mtime":1609334894088,"results":"32","hashOfConfig":"19"},{"size":4332,"mtime":1609343834843,"results":"33","hashOfConfig":"19"},{"size":264,"mtime":1609414318947,"results":"34","hashOfConfig":"19"},{"size":407,"mtime":1609414323409,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1gorc8u",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\user\\Desktop\\React\\confusion\\src\\index.js",[],["76","77"],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\App.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\MenuComponent.js",["78"],"import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n    function RenderMenuItem ({dish}) {\r\n        return (\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                   <CardTitle>{dish.name}</CardTitle>\r\n               </CardImgOverlay>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\DishdetailComponent.js",["79","80","81","82","83"],"import React , {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb,ListGroup,ListGroupItem, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody,Row,Col,\r\n     Label } from 'reactstrap';\r\n    import { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n  function RenderDish({dish}) {\r\n        if (dish != null)\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n   function RenderComments({comments}){\r\n       \r\n        if (comments != null) {\r\n            const commented = comments.map((com) => {\r\n                return (\r\n                    \r\n                    <ListGroup key={com.id} className=\"col-12 m-1\" >\r\n                       <ListGroupItem >{com.comment}</ListGroupItem>\r\n                       <ListGroupItem >--{com.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(com.date)))}</ListGroupItem>\r\n                    </ListGroup>\r\n                    \r\n                    \r\n                ); \r\n            });\r\n            return(\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    {commented}\r\n                    <CommentForm/>\r\n               </div>\r\n               \r\n               );\r\n        }\r\n        else \r\n           return (\r\n               <div></div>\r\n           );\r\n\r\n    }\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n    class CommentForm extends Component {\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state = {\r\n                isModalOpen : false\r\n            }\r\n\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        }\r\n        toggleModal() {\r\n            this.setState({\r\n              isModalOpen: !this.state.isModalOpen\r\n            });\r\n          }\r\n\r\n          handleSubmit(values) {\r\n            console.log('Current State is: ' + JSON.stringify(values));\r\n            alert('Current State is: ' + JSON.stringify(values));\r\n            // event.preventDefault();\r\n        }\r\n        render() {\r\n            return(\r\n                <div> \r\n                <Button onClick={this.toggleModal} type=\"submit\" color=\"primary\"><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <div className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" >Rating</Label>\r\n                                   <Control.select model=\".rating\" name=\"rating\" \r\n                                        className=\"form-control \">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                    </Control.select>    \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <Label htmlFor=\"yourname\" >Your Name</Label>\r\n                            <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <Label htmlFor=\"comment\" >Comment</Label>\r\n                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                        </div>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n   \r\n\r\n    const DishDetail = (props) => {\r\n          \r\n        return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                    <RenderComments comments={props.comments} />\r\n            </div>\r\n            \r\n        </div>\r\n        );\r\n    }  \r\n    \r\n\r\n\r\nexport default DishDetail;","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\MainComponent.js",["84"],"import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport  About  from \"./AboutComponent\";\r\nimport DishDetail from './DishdetailComponent';\r\nimport Contact from \"./ContactComponent\"\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n              promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n              leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n          <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route  path='/aboutus' component={() => <About leaders={this.props.leaders}/>} />\r\n              <Route exact path='/contactus' component={Contact} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n","C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\ContactComponent.js",["85","86","87","88","89","90","91","92"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render () {\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                 <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                        \r\n                    </div>\r\n               </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\shared\\leaders.js",[],["93","94"],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\user\\Desktop\\React\\confusion\\src\\redux\\reducer.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":3,"column":106,"nodeType":"101","messageId":"102","endLine":3,"endColumn":109},{"ruleId":"99","severity":1,"message":"104","line":3,"column":110,"nodeType":"101","messageId":"102","endLine":3,"endColumn":113},{"ruleId":"105","severity":1,"message":"106","line":94,"column":36,"nodeType":"107","endLine":95,"endColumn":67},{"ruleId":"105","severity":1,"message":"108","line":104,"column":29,"nodeType":"107","endLine":110,"endColumn":44},{"ruleId":"105","severity":1,"message":"109","line":125,"column":29,"nodeType":"107","endLine":127,"endColumn":68},{"ruleId":"110","severity":1,"message":"111","line":23,"column":3,"nodeType":"112","messageId":"113","endLine":26,"endColumn":4},{"ruleId":"114","severity":1,"message":"115","line":64,"column":29,"nodeType":"107","endLine":64,"endColumn":71},{"ruleId":"105","severity":1,"message":"108","line":78,"column":37,"nodeType":"107","endLine":84,"endColumn":44},{"ruleId":"105","severity":1,"message":"108","line":100,"column":37,"nodeType":"107","endLine":106,"endColumn":44},{"ruleId":"105","severity":1,"message":"108","line":122,"column":37,"nodeType":"107","endLine":128,"endColumn":44},{"ruleId":"105","severity":1,"message":"108","line":145,"column":37,"nodeType":"107","endLine":151,"endColumn":44},{"ruleId":"105","severity":1,"message":"116","line":168,"column":45,"nodeType":"107","endLine":170,"endColumn":52},{"ruleId":"105","severity":1,"message":"106","line":176,"column":37,"nodeType":"107","endLine":177,"endColumn":66},{"ruleId":"105","severity":1,"message":"109","line":186,"column":37,"nodeType":"107","endLine":188,"endColumn":68},{"ruleId":"95","replacedBy":"117"},{"ruleId":"97","replacedBy":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["119"],["120"],"no-global-assign","no-unsafe-negation"]